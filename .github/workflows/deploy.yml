name: Build & Deploy to ECS

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        description: "The name of the Docker image to build and push"
        required: true
        type: string
      TASK_NAME:
        description: "The ECS Task Definition name"
        required: true
        type: string
      CONTAINER_NAME:
        description: "The ECS container name in the task"
        required: true
        type: string
      ECS_SERVICE:
        description: "The ECS Service name"
        required: true
        type: string
      ECS_CLUSTER:
        description: "The ECS Cluster name"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true
      AWS_REGION:
        description: "AWS Region"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in no AWS ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      # 3. Build e tag da imagem Docker
      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: ${{ inputs.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}  
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLUSTER_NAME: ${{ inputs.ECS_CLUSTER }}
          SERVICE_NAME: ${{ inputs.ECS_SERVICE }}
          TASK_DEFINITION: ${{ inputs.TASK_NAME }}
          CONTAINER_NAME: ${{ inputs.CONTAINER_NAME }}
          IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ inputs.IMAGE_NAME }}:${{ github.sha }}
        run: |
          # Obter a task definition atual
          TASK_DEFINITION_ARN=$(aws ecs describe-task-definition \
            --task-definition $TASK_DEFINITION \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)

          # Criar nova task definition com a nova imagem
          NEW_TASK_DEFINITION=$(aws ecs register-task-definition \
            --family $TASK_DEFINITION \
            --container-definitions "[{\"name\":\"$CONTAINER_NAME\",\"image\":\"$IMAGE_URI\",\"essential\":true,\"memory\":512,\"cpu\":256,\"portMappings\":[{\"containerPort\":3000,\"hostPort\":3000,\"protocol\":\"tcp\"}]}]" \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)

          # Atualizar o serviço ECS com a nova task definition
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition $NEW_TASK_DEFINITION
